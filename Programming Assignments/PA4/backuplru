/*
 * File: pager-lru.c
 * Author:       Andy Sayler
 *               http://www.andysayler.com
 * Adopted From: Dr. Alva Couch
 *               http://www.cs.tufts.edu/~couch/
 *
 * Project: CSCI 3753 Programming Assignment 4
 * Create Date: Unknown
 * Modify Date: 2012/04/03
 * Description:
 * 	This file contains an lru pageit
 *      implmentation.
 */

#include <stdio.h> 
#include <stdlib.h>

#include "simulator.h"

void pageit(Pentry q[MAXPROCESSES]) {
    //Static
    static int init;
    static int tick;
    static int timestamps[MAXPROCESSES][MAXPROCPAGES];

    //init if needed
    if (!init) {
        tick = 0;
        for (int x = 0; x < MAXPROCESSES; x++) {
            for (int y = 0; y < MAXPROCPAGES; y++) {
                timestamps[x][y] = 0;
            }
        }
        init = 1;
    }

    //Local Vars
    int min;
    int lruproc;

    //loop through processes
    for (int i = 0; i < MAXPROCESSES; i++) {
        //get current page for current process
        int curpage = q[i].pc / PAGESIZE;

        //update the timestamps data
        timestamps[i][curpage] = tick;
        
        //check if paged in
        if (!q[i].pages[curpage]) {
            //attempt to page in the current process and page
            if (!pagein(i,curpage)) { 
                //otherwise find and page the LRU page.
                min = tick;
                for (int x = 0; x < q[i].npages; x++){
                    if (timestamps[i][x] < min && q[i].pages[x] == 1){
                        min = timestamps[i][x];
                        lruproc = x;
                    }
                }
                pageout(i,lruproc);
            }
        }

    }
    tick++;
}
